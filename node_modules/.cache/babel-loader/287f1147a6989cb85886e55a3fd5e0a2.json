{"ast":null,"code":"var _jsxFileName = \"/home/cal/memory-card/src/components/main/card/section.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"../../header/header\";\nimport uniqid from \"uniqid\";\nimport Card from \"./card\";\nimport japan from \"../main-assets/images/jase-bloor.jpg\";\nimport dubai from \"../main-assets/images/daniel-zacatenco.jpg\";\nimport newYork from \"../main-assets/images/denys-nevozhai.jpg\";\nimport sweden from \"../main-assets/images/micael-widell.jpg\";\nimport bolivia from \"../main-assets/images/geziel-esteban.jpg\";\nimport kansas from \"../main-assets/images/dylan-freedom.jpg\";\nimport russia from \"../main-assets/images/a-l.jpg\";\nimport southbank from \"../main-assets/images/marcus-clark.jpg\";\nimport london from \"../main-assets/images/christopher-burns.jpg\";\nimport \"../main-assets/style/card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Section = () => {\n  _s();\n\n  let city = [{\n    src: japan,\n    id: uniqid(),\n    imageText: \"Japan City by Jase-bloor\",\n    clicked: false\n  }, {\n    src: dubai,\n    id: uniqid(),\n    imageText: \"Dubai City by Daniel-Zacatenco\",\n    clicked: false\n  }, {\n    src: newYork,\n    id: uniqid(),\n    imageText: \"NewYork City by Denys Nevozhai\",\n    clicked: false\n  }, {\n    src: sweden,\n    id: uniqid(),\n    imageText: \"Sweden City by Micael Widell\",\n    clicked: false\n  }, {\n    src: bolivia,\n    id: uniqid(),\n    imageText: \"Bolivia City by Geziel Esteban\",\n    clicked: false\n  }, {\n    src: kansas,\n    id: uniqid(),\n    imageText: \"Kansas City by Dylam Freedom\",\n    clicked: false\n  }, {\n    src: russia,\n    id: uniqid(),\n    imageText: \"Russia City by A-L\",\n    clicked: false\n  }, {\n    src: southbank,\n    id: uniqid(),\n    imageText: \"southBank City by Marcus Clark\",\n    clicked: false\n  }, {\n    src: london,\n    id: uniqid(),\n    imageText: \"London City by Christopher Burns\",\n    clicked: false\n  }];\n  const [card, setCardInfo] = useState(city);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n\n  const handleClick = e => {\n    // e.preventDefault();\n    const cardShuffled = shuffle(city);\n    setCardInfo(cardShuffled); // handleScore(id)\n  }; // const handleScore = (id) =>{\n  //     let element = card.filter((card)=> card.id === id);\n  //     if(element && element.clicked === false){\n  //         element.clicked = true;\n  //         setCard({...card, clicked: false});\n  //         handleIncrement();\n  //     }else if(element && element.clicked === true){\n  //         if(score > bestScore){\n  //             setBestScore(score);\n  //         }\n  //         setScore(0);\n  //         setCard({...card, clicked: true});\n  //         card.forEach((card)=> card.clicked = false);\n  //         console.log(card);\n  //     }\n  // }\n  // const handleIncrement = () => {\n  //     setScore(score + 1);\n  // }\n\n\n  const shuffle = card => {\n    let currentIndex = card.length;\n    let tempIndex;\n    let randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      tempIndex = card[currentIndex];\n      card[currentIndex] = card[randomIndex];\n      card[randomIndex] = tempIndex;\n    }\n\n    return card;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        score: score,\n        bestScore: bestScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-intro\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Get points by Clicking on an image but don't click on any more than Once!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        handleClick: handleClick,\n        clicked: card.clicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Section, \"7czesRb1wXfWa/o0YxFWs0asPqA=\");\n\n_c = Section;\nexport default Section;\n\nvar _c;\n\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"names":["React","useState","Header","uniqid","Card","japan","dubai","newYork","sweden","bolivia","kansas","russia","southbank","london","Section","city","src","id","imageText","clicked","card","setCardInfo","score","setScore","bestScore","setBestScore","handleClick","e","cardShuffled","shuffle","currentIndex","length","tempIndex","randomIndex","Math","floor","random"],"sources":["/home/cal/memory-card/src/components/main/card/section.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"../../header/header\";\nimport uniqid from \"uniqid\";\nimport Card from \"./card\";\nimport japan from \"../main-assets/images/jase-bloor.jpg\";\nimport dubai from \"../main-assets/images/daniel-zacatenco.jpg\";\nimport newYork from \"../main-assets/images/denys-nevozhai.jpg\";\nimport sweden from \"../main-assets/images/micael-widell.jpg\";\nimport bolivia from \"../main-assets/images/geziel-esteban.jpg\";\nimport kansas from \"../main-assets/images/dylan-freedom.jpg\";\nimport russia from \"../main-assets/images/a-l.jpg\";\nimport southbank from \"../main-assets/images/marcus-clark.jpg\";\nimport london from \"../main-assets/images/christopher-burns.jpg\";\nimport \"../main-assets/style/card.css\";\nconst Section = () => {\n\n    let city = [{\n        src: japan,\n        id: uniqid(),\n        imageText: \"Japan City by Jase-bloor\",\n        clicked: false\n\n    }, {\n        src: dubai,\n        id: uniqid(),\n        imageText: \"Dubai City by Daniel-Zacatenco\",\n        clicked: false\n    }, {\n        src: newYork,\n        id: uniqid(),\n        imageText: \"NewYork City by Denys Nevozhai\",\n        clicked: false\n    }, {\n        src: sweden,\n        id: uniqid(),\n        imageText: \"Sweden City by Micael Widell\",\n        clicked: false\n    }, {\n        src: bolivia,\n        id: uniqid(),\n        imageText: \"Bolivia City by Geziel Esteban\",\n        clicked: false\n    }, {\n        src: kansas,\n        id: uniqid(),\n        imageText: \"Kansas City by Dylam Freedom\",\n        clicked: false\n    }, {\n        src: russia,\n        id: uniqid(),\n        imageText: \"Russia City by A-L\",\n        clicked: false\n    }, {\n        src: southbank,\n        id: uniqid(),\n        imageText: \"southBank City by Marcus Clark\",\n        clicked: false\n    }, {\n        src: london,\n        id: uniqid(),\n        imageText: \"London City by Christopher Burns\",\n        clicked: false\n    }];\n\n    const [card, setCardInfo] = useState(city);\n    const [score, setScore] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n\n    const handleClick = (e) => {\n        // e.preventDefault();\n        const cardShuffled = shuffle(city)\n        setCardInfo(cardShuffled);\n        // handleScore(id)\n    }\n\n    // const handleScore = (id) =>{\n    //     let element = card.filter((card)=> card.id === id);\n    //     if(element && element.clicked === false){\n    //         element.clicked = true;\n    //         setCard({...card, clicked: false});\n    //         handleIncrement();\n    //     }else if(element && element.clicked === true){\n    //         if(score > bestScore){\n    //             setBestScore(score);\n    //         }\n    //         setScore(0);\n    //         setCard({...card, clicked: true});\n    //         card.forEach((card)=> card.clicked = false);\n    //         console.log(card);\n    //     }\n    // }\n    // const handleIncrement = () => {\n    //     setScore(score + 1);\n    // }\n\n    const shuffle = (card) => {\n        let currentIndex = card.length;\n        let tempIndex;\n        let randomIndex;\n        while (currentIndex !== 0) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex--;\n\n            tempIndex = card[currentIndex];\n            card[currentIndex] = card[randomIndex];\n            card[randomIndex] = tempIndex;\n        }\n        return card;\n    }\n\n    return (\n        <div>\n            <div className=\"header\">\n                <Header score={score} bestScore={bestScore} />\n            </div>\n            <div className=\"game-intro\">\n                <h3>Get points by Clicking on an image but don't click on any more than Once!</h3>\n            </div>\n            <div className=\"main\">\n                <Card card={card} handleClick={handleClick} clicked={card.clicked} />\n            </div>\n        </div>\n    )\n}\n\nexport default Section;"],"mappings":"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"},"metadata":{},"sourceType":"module"}