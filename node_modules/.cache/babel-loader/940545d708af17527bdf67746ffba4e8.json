{"ast":null,"code":"var _jsxFileName = \"/home/cal/memory-card/src/components/main/card/section.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"../../header/header\";\nimport uniqid from \"uniqid\";\nimport Card from \"./card\";\nimport japan from \"../main-assets/images/jase-bloor.jpg\";\nimport dubai from \"../main-assets/images/daniel-zacatenco.jpg\";\nimport newYork from \"../main-assets/images/denys-nevozhai.jpg\";\nimport sweden from \"../main-assets/images/micael-widell.jpg\";\nimport bolivia from \"../main-assets/images/geziel-esteban.jpg\";\nimport kansas from \"../main-assets/images/dylan-freedom.jpg\";\nimport russia from \"../main-assets/images/a-l.jpg\";\nimport southbank from \"../main-assets/images/marcus-clark.jpg\";\nimport london from \"../main-assets/images/christopher-burns.jpg\";\nimport \"../main-assets/style/card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Section = () => {\n  _s();\n\n  let city = [{\n    src: japan,\n    id: uniqid(),\n    imageText: \"Japan City by Jase-bloor\",\n    clicked: false\n  }, {\n    src: dubai,\n    id: uniqid(),\n    imageText: \"Dubai City by Daniel-Zacatenco\",\n    clicked: false\n  }, {\n    src: newYork,\n    id: uniqid(),\n    imageText: \"NewYork City by Denys Nevozhai\",\n    clicked: false\n  }, {\n    src: sweden,\n    id: uniqid(),\n    imageText: \"Sweden City by Micael Widell\",\n    clicked: false\n  }, {\n    src: bolivia,\n    id: uniqid(),\n    imageText: \"Bolivia City by Geziel Esteban\",\n    clicked: false\n  }, {\n    src: kansas,\n    id: uniqid(),\n    imageText: \"Kansas City by Dylam Freedom\",\n    clicked: false\n  }, {\n    src: russia,\n    id: uniqid(),\n    imageText: \"Russia City by A-L\",\n    clicked: false\n  }, {\n    src: southbank,\n    id: uniqid(),\n    imageText: \"southBank City by Marcus Clark\",\n    clicked: false\n  }, {\n    src: london,\n    id: uniqid(),\n    imageText: \"London City by Christopher Burns\",\n    clicked: false\n  }];\n  const [cardInfo, setCardInfo] = useState(city);\n  const [score, setScore] = useState(0);\n  let [bestScore, setBestScore] = useState(0);\n\n  const handleClick = id => {\n    const cardShuffled = shuffle(cardInfo);\n    setCardInfo(cardShuffled);\n    handleScore(cardShuffled, id);\n  };\n\n  const resetCardClicked = () => {\n    setCardInfo({ ...cardInfo,\n      clicked: false\n    });\n  };\n\n  const handleScore = (cardShuffled, id) => {\n    let element = cardShuffled.filter(card => card.id === id);\n\n    if (element && element.clicked === false) {\n      element.clicked = true;\n      resetCardClicked();\n      handleIncrement();\n    } else if (element && element.clicked === false) {\n      if (score > bestScore) {\n        bestScore = score;\n        setBestScore(bestScore);\n      }\n\n      setScore(0);\n      setCardInfo({ ...cardInfo,\n        clicked: true\n      });\n      cardInfo.forEach(card => card.clicked = false);\n    }\n  };\n\n  const handleIncrement = () => {\n    setScore(score + 1);\n  };\n\n  const shuffle = card => {\n    let resultArray = [];\n\n    while (card.length > 0) {\n      let randomIndex = Math.floor(Math.random() * card.length);\n      let randomeElement = card[randomIndex];\n      resultArray.push(randomeElement);\n      card.splice(randomIndex, 1);\n    }\n\n    return resultArray;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        score: score,\n        bestScore: bestScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-intro\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Get points by Clicking on an image but don't click on any more than Once!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        card: cardInfo,\n        handleClick: handleClick,\n        clicked: cardInfo.clicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Section, \"r62qKbgmEQ1+nSFeNkvmg+Y3Bl0=\");\n\n_c = Section;\nexport default Section;\n\nvar _c;\n\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"names":["React","useState","Header","uniqid","Card","japan","dubai","newYork","sweden","bolivia","kansas","russia","southbank","london","Section","city","src","id","imageText","clicked","cardInfo","setCardInfo","score","setScore","bestScore","setBestScore","handleClick","cardShuffled","shuffle","handleScore","resetCardClicked","element","filter","card","handleIncrement","forEach","resultArray","length","randomIndex","Math","floor","random","randomeElement","push","splice"],"sources":["/home/cal/memory-card/src/components/main/card/section.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"../../header/header\";\nimport uniqid from \"uniqid\";\nimport Card from \"./card\";\nimport japan from \"../main-assets/images/jase-bloor.jpg\";\nimport dubai from \"../main-assets/images/daniel-zacatenco.jpg\";\nimport newYork from \"../main-assets/images/denys-nevozhai.jpg\";\nimport sweden from \"../main-assets/images/micael-widell.jpg\";\nimport bolivia from \"../main-assets/images/geziel-esteban.jpg\";\nimport kansas from \"../main-assets/images/dylan-freedom.jpg\";\nimport russia from \"../main-assets/images/a-l.jpg\";\nimport southbank from \"../main-assets/images/marcus-clark.jpg\";\nimport london from \"../main-assets/images/christopher-burns.jpg\";\nimport \"../main-assets/style/card.css\";\nconst Section = () => {\n\n    let city = [{\n        src: japan,\n        id: uniqid(),\n        imageText: \"Japan City by Jase-bloor\",\n        clicked: false\n\n    }, {\n        src: dubai,\n        id: uniqid(),\n        imageText: \"Dubai City by Daniel-Zacatenco\",\n        clicked: false\n    }, {\n        src: newYork,\n        id: uniqid(),\n        imageText: \"NewYork City by Denys Nevozhai\",\n        clicked: false\n    }, {\n        src: sweden,\n        id: uniqid(),\n        imageText: \"Sweden City by Micael Widell\",\n        clicked: false\n    }, {\n        src: bolivia,\n        id: uniqid(),\n        imageText: \"Bolivia City by Geziel Esteban\",\n        clicked: false\n    }, {\n        src: kansas,\n        id: uniqid(),\n        imageText: \"Kansas City by Dylam Freedom\",\n        clicked: false\n    }, {\n        src: russia,\n        id: uniqid(),\n        imageText: \"Russia City by A-L\",\n        clicked: false\n    }, {\n        src: southbank,\n        id: uniqid(),\n        imageText: \"southBank City by Marcus Clark\",\n        clicked: false\n    }, {\n        src: london,\n        id: uniqid(),\n        imageText: \"London City by Christopher Burns\",\n        clicked: false\n    }];\n\n    const [cardInfo, setCardInfo] = useState(city);\n    const [score, setScore] = useState(0);\n    let [bestScore, setBestScore] = useState(0);\n\n    const handleClick = (id) => {\n        const cardShuffled = shuffle(cardInfo)\n        setCardInfo(cardShuffled);\n        handleScore(cardShuffled,id)\n    }\n\n    const resetCardClicked = () =>{\n        setCardInfo({...cardInfo, clicked: false});\n    }\n\n    const handleScore = (cardShuffled,id) => {\n        let element = cardShuffled.filter((card) => card.id === id);\n        if(element && element.clicked === false){\n            element.clicked = true;\n            resetCardClicked();\n            handleIncrement();\n        }else if(element && element.clicked === false){\n            if(score > bestScore){\n                bestScore = score;\n                setBestScore(bestScore);\n            }\n            setScore(0);\n            setCardInfo({...cardInfo, clicked: true});\n            cardInfo.forEach((card)=> card.clicked = false);\n        }\n    }\n    const handleIncrement = () => {\n        setScore(score + 1);\n    }\n\n    const shuffle = (card) => {\n        let resultArray = [];\n        while (card.length > 0) {\n            let randomIndex = Math.floor(Math.random() * card.length);\n            let randomeElement = card[randomIndex];\n            resultArray.push(randomeElement);\n            card.splice(randomIndex, 1);\n        }\n        return resultArray;\n    }\n\n    return (\n        <div>\n            <div className=\"header\">\n                <Header score={score} bestScore={bestScore} />\n            </div>\n            <div className=\"game-intro\">\n                <h3>Get points by Clicking on an image but don't click on any more than Once!</h3>\n            </div>\n            <div className=\"main\">\n                <Card card={cardInfo} handleClick={handleClick} clicked={cardInfo.clicked} />\n            </div>\n        </div>\n    )\n}\n\nexport default Section;"],"mappings":"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"},"metadata":{},"sourceType":"module"}